/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface IMarketServiceReadableV1Interface extends ethers.utils.Interface {
  functions: {
    "getAuction(uint256)": FunctionFragment;
    "getAuctionByNFT(address,uint256)": FunctionFragment;
    "getBidding(address)": FunctionFragment;
    "getByNFT(address,uint256)": FunctionFragment;
    "getCurrentBid(uint256,address)": FunctionFragment;
    "getListing(uint256)": FunctionFragment;
    "getListingByNFT(address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getAuction",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionByNFT",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "getBidding", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getByNFT",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getCurrentBid",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getListing",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getListingByNFT",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: "getAuction", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionByNFT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getBidding", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getByNFT", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getCurrentBid",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getListing", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getListingByNFT",
    data: BytesLike
  ): Result;

  events: {};
}

export class IMarketServiceReadableV1 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: IMarketServiceReadableV1Interface;

  functions: {
    getAuction(
      auctionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          boolean,
          string,
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isEnded: boolean;
          nft: string;
          winner: string;
          owner: string;
          currency: string;
          tokenId: BigNumber;
          fee: BigNumber;
          bid: BigNumber;
          bidDuration: BigNumber;
          end: BigNumber;
          id: BigNumber;
        }
      ]
    >;

    getAuctionByNFT(
      nft: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          boolean,
          string,
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isEnded: boolean;
          nft: string;
          winner: string;
          owner: string;
          currency: string;
          tokenId: BigNumber;
          fee: BigNumber;
          bid: BigNumber;
          bidDuration: BigNumber;
          end: BigNumber;
          id: BigNumber;
        }
      ]
    >;

    getBidding(
      buyer: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], BigNumber[]] & {
        auctionIds: BigNumber[];
        amounts: BigNumber[];
      }
    >;

    getByNFT(
      nft: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          boolean,
          string,
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isEnded: boolean;
          nft: string;
          winner: string;
          owner: string;
          currency: string;
          tokenId: BigNumber;
          fee: BigNumber;
          bid: BigNumber;
          bidDuration: BigNumber;
          end: BigNumber;
          id: BigNumber;
        },
        [
          boolean,
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isEnded: boolean;
          nft: string;
          currency: string;
          owner: string;
          tokenId: BigNumber;
          fee: BigNumber;
          price: BigNumber;
          id: BigNumber;
        }
      ] & {
        auction: [
          boolean,
          string,
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isEnded: boolean;
          nft: string;
          winner: string;
          owner: string;
          currency: string;
          tokenId: BigNumber;
          fee: BigNumber;
          bid: BigNumber;
          bidDuration: BigNumber;
          end: BigNumber;
          id: BigNumber;
        };
        listing: [
          boolean,
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isEnded: boolean;
          nft: string;
          currency: string;
          owner: string;
          tokenId: BigNumber;
          fee: BigNumber;
          price: BigNumber;
          id: BigNumber;
        };
      }
    >;

    getCurrentBid(
      auctionId: BigNumberish,
      bidder: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getListing(
      listingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          boolean,
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isEnded: boolean;
          nft: string;
          currency: string;
          owner: string;
          tokenId: BigNumber;
          fee: BigNumber;
          price: BigNumber;
          id: BigNumber;
        }
      ]
    >;

    getListingByNFT(
      nft: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          boolean,
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isEnded: boolean;
          nft: string;
          currency: string;
          owner: string;
          tokenId: BigNumber;
          fee: BigNumber;
          price: BigNumber;
          id: BigNumber;
        }
      ]
    >;
  };

  getAuction(
    auctionId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      boolean,
      string,
      string,
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      isEnded: boolean;
      nft: string;
      winner: string;
      owner: string;
      currency: string;
      tokenId: BigNumber;
      fee: BigNumber;
      bid: BigNumber;
      bidDuration: BigNumber;
      end: BigNumber;
      id: BigNumber;
    }
  >;

  getAuctionByNFT(
    nft: string,
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      boolean,
      string,
      string,
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      isEnded: boolean;
      nft: string;
      winner: string;
      owner: string;
      currency: string;
      tokenId: BigNumber;
      fee: BigNumber;
      bid: BigNumber;
      bidDuration: BigNumber;
      end: BigNumber;
      id: BigNumber;
    }
  >;

  getBidding(
    buyer: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber[], BigNumber[]] & {
      auctionIds: BigNumber[];
      amounts: BigNumber[];
    }
  >;

  getByNFT(
    nft: string,
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      [
        boolean,
        string,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isEnded: boolean;
        nft: string;
        winner: string;
        owner: string;
        currency: string;
        tokenId: BigNumber;
        fee: BigNumber;
        bid: BigNumber;
        bidDuration: BigNumber;
        end: BigNumber;
        id: BigNumber;
      },
      [
        boolean,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isEnded: boolean;
        nft: string;
        currency: string;
        owner: string;
        tokenId: BigNumber;
        fee: BigNumber;
        price: BigNumber;
        id: BigNumber;
      }
    ] & {
      auction: [
        boolean,
        string,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isEnded: boolean;
        nft: string;
        winner: string;
        owner: string;
        currency: string;
        tokenId: BigNumber;
        fee: BigNumber;
        bid: BigNumber;
        bidDuration: BigNumber;
        end: BigNumber;
        id: BigNumber;
      };
      listing: [
        boolean,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isEnded: boolean;
        nft: string;
        currency: string;
        owner: string;
        tokenId: BigNumber;
        fee: BigNumber;
        price: BigNumber;
        id: BigNumber;
      };
    }
  >;

  getCurrentBid(
    auctionId: BigNumberish,
    bidder: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getListing(
    listingId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      boolean,
      string,
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      isEnded: boolean;
      nft: string;
      currency: string;
      owner: string;
      tokenId: BigNumber;
      fee: BigNumber;
      price: BigNumber;
      id: BigNumber;
    }
  >;

  getListingByNFT(
    nft: string,
    tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      boolean,
      string,
      string,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      isEnded: boolean;
      nft: string;
      currency: string;
      owner: string;
      tokenId: BigNumber;
      fee: BigNumber;
      price: BigNumber;
      id: BigNumber;
    }
  >;

  callStatic: {
    getAuction(
      auctionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        boolean,
        string,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isEnded: boolean;
        nft: string;
        winner: string;
        owner: string;
        currency: string;
        tokenId: BigNumber;
        fee: BigNumber;
        bid: BigNumber;
        bidDuration: BigNumber;
        end: BigNumber;
        id: BigNumber;
      }
    >;

    getAuctionByNFT(
      nft: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        boolean,
        string,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isEnded: boolean;
        nft: string;
        winner: string;
        owner: string;
        currency: string;
        tokenId: BigNumber;
        fee: BigNumber;
        bid: BigNumber;
        bidDuration: BigNumber;
        end: BigNumber;
        id: BigNumber;
      }
    >;

    getBidding(
      buyer: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], BigNumber[]] & {
        auctionIds: BigNumber[];
        amounts: BigNumber[];
      }
    >;

    getByNFT(
      nft: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          boolean,
          string,
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isEnded: boolean;
          nft: string;
          winner: string;
          owner: string;
          currency: string;
          tokenId: BigNumber;
          fee: BigNumber;
          bid: BigNumber;
          bidDuration: BigNumber;
          end: BigNumber;
          id: BigNumber;
        },
        [
          boolean,
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isEnded: boolean;
          nft: string;
          currency: string;
          owner: string;
          tokenId: BigNumber;
          fee: BigNumber;
          price: BigNumber;
          id: BigNumber;
        }
      ] & {
        auction: [
          boolean,
          string,
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isEnded: boolean;
          nft: string;
          winner: string;
          owner: string;
          currency: string;
          tokenId: BigNumber;
          fee: BigNumber;
          bid: BigNumber;
          bidDuration: BigNumber;
          end: BigNumber;
          id: BigNumber;
        };
        listing: [
          boolean,
          string,
          string,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          isEnded: boolean;
          nft: string;
          currency: string;
          owner: string;
          tokenId: BigNumber;
          fee: BigNumber;
          price: BigNumber;
          id: BigNumber;
        };
      }
    >;

    getCurrentBid(
      auctionId: BigNumberish,
      bidder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getListing(
      listingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        boolean,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isEnded: boolean;
        nft: string;
        currency: string;
        owner: string;
        tokenId: BigNumber;
        fee: BigNumber;
        price: BigNumber;
        id: BigNumber;
      }
    >;

    getListingByNFT(
      nft: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        boolean,
        string,
        string,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        isEnded: boolean;
        nft: string;
        currency: string;
        owner: string;
        tokenId: BigNumber;
        fee: BigNumber;
        price: BigNumber;
        id: BigNumber;
      }
    >;
  };

  filters: {};

  estimateGas: {
    getAuction(
      auctionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionByNFT(
      nft: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBidding(buyer: string, overrides?: CallOverrides): Promise<BigNumber>;

    getByNFT(
      nft: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getCurrentBid(
      auctionId: BigNumberish,
      bidder: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getListing(
      listingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getListingByNFT(
      nft: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAuction(
      auctionId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAuctionByNFT(
      nft: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBidding(
      buyer: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getByNFT(
      nft: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getCurrentBid(
      auctionId: BigNumberish,
      bidder: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getListing(
      listingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getListingByNFT(
      nft: string,
      tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
