/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LPWrapper, LPWrapperInterface } from "../LPWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_stakedToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakedToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106d23803806106d283398101604081905261002f9161011e565b8151610042906001906020850190610069565b50600080546001600160a01b0319166001600160a01b03929092169190911790555061024b565b828054610075906101fa565b90600052602060002090601f01602090048101928261009757600085556100dd565b82601f106100b057805160ff19168380011785556100dd565b828001600101855582156100dd579182015b828111156100dd5782518255916020019190600101906100c2565b506100e99291506100ed565b5090565b5b808211156100e957600081556001016100ee565b80516001600160a01b038116811461011957600080fd5b919050565b60008060408385031215610130578182fd5b82516001600160401b0380821115610146578384fd5b818501915085601f830112610159578384fd5b81518181111561016b5761016b610235565b604051601f8201601f19908116603f0116810190838211818310171561019357610193610235565b816040528281526020935088848487010111156101ae578687fd5b8691505b828210156101cf57848201840151818301850152908301906101b2565b828211156101df57868484830101525b95506101ef915050858201610102565b925050509250929050565b600181811c9082168061020e57607f821691505b6020821081141561022f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6104788061025a6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806370a082311161005057806370a08231146100b1578063a694fc3a146100da578063cc7a262e146100ed57600080fd5b806306fdde031461007757806318160ddd146100955780633ccfd60b146100a7575b600080fd5b61007f610118565b60405161008c9190610398565b60405180910390f35b6002545b60405190815260200161008c565b6100af6101aa565b005b6100996100bf366004610332565b6001600160a01b031660009081526003602052604090205490565b6100af6100e8366004610380565b6102b6565b600054610100906001600160a01b031681565b6040516001600160a01b03909116815260200161008c565b6060600180546101279061041a565b80601f01602080910402602001604051908101604052809291908181526020018280546101539061041a565b80156101a05780601f10610175576101008083540402835291602001916101a0565b820191906000526020600020905b81548152906001019060200180831161018357829003601f168201915b5050505050905090565b336000908152600360205260409020548061020b5760405162461bcd60e51b815260206004820152601460248201527f414f4e503a20696e76616c696420616d6f756e74000000000000000000000000604482015260640160405180910390fd5b806002546102199190610403565b600255336000818152600360205260408082208290559054905163a9059cbb60e01b81526004810192909252602482018390526001600160a01b03169063a9059cbb906044015b602060405180830381600087803b15801561027a57600080fd5b505af115801561028e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b29190610360565b5050565b806002546102c491906103eb565b600255336000908152600360205260409020546102e29082906103eb565b33600081815260036020526040808220939093555491516323b872dd60e01b81526004810191909152306024820152604481018390526001600160a01b03909116906323b872dd90606401610260565b600060208284031215610343578081fd5b81356001600160a01b0381168114610359578182fd5b9392505050565b600060208284031215610371578081fd5b81518015158114610359578182fd5b600060208284031215610391578081fd5b5035919050565b6000602080835283518082850152825b818110156103c4578581018301518582016040015282016103a8565b818111156103d55783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156103fe576103fe610455565b500190565b60008282101561041557610415610455565b500390565b600181811c9082168061042e57607f821691505b6020821081141561044f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea164736f6c6343000804000a";

export class LPWrapper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _name: string,
    _stakedToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LPWrapper> {
    return super.deploy(
      _name,
      _stakedToken,
      overrides || {}
    ) as Promise<LPWrapper>;
  }
  getDeployTransaction(
    _name: string,
    _stakedToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _stakedToken, overrides || {});
  }
  attach(address: string): LPWrapper {
    return super.attach(address) as LPWrapper;
  }
  connect(signer: Signer): LPWrapper__factory {
    return super.connect(signer) as LPWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPWrapperInterface {
    return new utils.Interface(_abi) as LPWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPWrapper {
    return new Contract(address, _abi, signerOrProvider) as LPWrapper;
  }
}
