/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ChainVerseEvent,
  ChainVerseEventInterface,
} from "../ChainVerseEvent";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "string",
        name: "txs",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "parent1Id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "parent2Id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ChainVerseEvent.Payment[]",
        name: "payments",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ChainVerseEvent.Payment",
        name: "payment",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expire",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "Breeding",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "string",
        name: "txs",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "parent1Id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "parent2Id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct ChainVerseEvent.Payment[]",
        name: "payments",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct ChainVerseEvent.Payment",
        name: "payment",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "expire",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "breeding",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104c2806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f070c7f414610030575b600080fd5b61004361003e366004610208565b610045565b005b7f12e8f75a9035c6ad04425916fe170aa3cb743afb73fc786ec260771c95dcd7878b8b8b8b8b8b8b8b8b8b8b6040516100889b9a999897969594939291906103d8565b60405180910390a15050505050505050505050565b60008083601f8401126100ae578081fd5b50813567ffffffffffffffff8111156100c5578182fd5b6020830191508360208260051b85010111156100e057600080fd5b9250929050565b60008083601f8401126100f8578182fd5b50813567ffffffffffffffff81111561010f578182fd5b6020830191508360208260061b85010111156100e057600080fd5b600082601f83011261013a578081fd5b813567ffffffffffffffff808211156101555761015561049f565b604051601f8301601f19908116603f0116810190828211818310171561017d5761017d61049f565b81604052838152866020858801011115610195578485fd5b8360208701602083013792830160200193909352509392505050565b60008083601f8401126101c2578182fd5b50813567ffffffffffffffff8111156101d9578182fd5b6020830191508360208285010111156100e057600080fd5b600060408284031215610202578081fd5b50919050565b60008060008060008060008060008060006101208c8e031215610229578687fd5b67ffffffffffffffff808d35111561023f578788fd5b61024c8e8e358f0161009d565b909c509a5060208d0135811015610261578788fd5b6102718e60208f01358f016101b1565b909a50985060408d0135975060608d0135965060808d0135811015610294578586fd5b6102a48e60808f01358f016100e7565b90965094506102b68e60a08f016101f1565b935060e08d01359250806101008e013511156102d0578182fd5b506102e28d6101008e01358e0161012a565b90509295989b509295989b9093969950565b818352602083019250600081815b848110156103275761031486836103a5565b6040958601959190910190600101610302565b5093949350505050565b60008151808452815b818110156103565760208185018101518683018201520161033a565b818111156103675782602083870101525b50601f01601f19169290920160200192915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b803573ffffffffffffffffffffffffffffffffffffffff81168082146103ca57600080fd5b835250602090810135910152565b61012080825281018b9052600061014082018d825b8e81101561042f57813573ffffffffffffffffffffffffffffffffffffffff8116808214610419578586fd5b84525060209283019291909101906001016103ed565b50508281036020840152610444818c8e61037c565b9050896040840152886060840152828103608084015261046581888a6102f4565b905061047460a08401876103a5565b8460e084015282810361010084015261048d8185610331565b9e9d5050505050505050505050505050565b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000804000a";

export class ChainVerseEvent__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ChainVerseEvent> {
    return super.deploy(overrides || {}) as Promise<ChainVerseEvent>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ChainVerseEvent {
    return super.attach(address) as ChainVerseEvent;
  }
  connect(signer: Signer): ChainVerseEvent__factory {
    return super.connect(signer) as ChainVerseEvent__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainVerseEventInterface {
    return new utils.Interface(_abi) as ChainVerseEventInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainVerseEvent {
    return new Contract(address, _abi, signerOrProvider) as ChainVerseEvent;
  }
}
