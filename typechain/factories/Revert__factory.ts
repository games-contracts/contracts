/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Revert, RevertInterface } from "../Revert";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "errorCode",
        type: "uint8",
      },
    ],
    name: "Unauth",
    type: "error",
  },
  {
    inputs: [],
    name: "hit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hit2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hit3",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060f48061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80632ae3594a1460415780634b8dcc54146059578063f927432e14605f575b600080fd5b60476065565b60405190815260200160405180910390f35b60476099565b604760c9565b60405162461bcd60e51b81526020600482015260016024820152603160f81b60448201526000906064015b60405180910390fd5b60405162461bcd60e51b815260206004820152600360248201526231323360e81b60448201526000906064016090565b604051633b59ca8560e21b815260016004820152600090602401609056fea164736f6c6343000804000a";

export class Revert__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Revert> {
    return super.deploy(overrides || {}) as Promise<Revert>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Revert {
    return super.attach(address) as Revert;
  }
  connect(signer: Signer): Revert__factory {
    return super.connect(signer) as Revert__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevertInterface {
    return new utils.Interface(_abi) as RevertInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Revert {
    return new Contract(address, _abi, signerOrProvider) as Revert;
  }
}
